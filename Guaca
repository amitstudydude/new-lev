#!/bin/bash
# Function to handle cleanup and rollback on error
cleanup() {
  echo "An error occurred. Cleaning up..."
  # Stop and remove the Docker containers
  docker-compose down
  # Remove the database volume
  rm -rf ./db
  exit 1
}
# Trap any error and call cleanup function
trap cleanup ERR
# Create the docker-compose.yml file
cat <<EOF > docker-compose.yml
version: '3'
services:
  guacd:
    restart: always
    image: guacamole/guacd
  guacamole-server:
    restart: always
    image: guacamole/guacamole
    depends_on:
      - database
    ports:
      - "8080:8080"
    environment:
      - GUACD_HOSTNAME=guacd
      - POSTGRESQL_HOSTNAME=database
      - POSTGRESQL_DATABASE=guacamole         # Use a valid database name
      - POSTGRESQL_USER=root                   # User set to "root"
      - POSTGRESQL_PASSWORD=root                # Password set to "root"
  database:
    restart: always
    image: postgres:15.5-alpine
    environment:
      - POSTGRES_USER=postgres                 # Default PostgreSQL superuser
      - POSTGRES_DB=guacamole                  # Name of the database to create
      - POSTGRES_PASSWORD=root                  # Password for the PostgreSQL superuser
    volumes:
      - ./db:/var/lib/postgresql/data:rw
EOF
# Function to start Docker containers
start_containers() {
  echo "Starting Docker containers..."
  docker-compose up -d
  echo "Waiting for PostgreSQL to initialize..."
  sleep 15 # Wait for the database to initialize
}
# Function to initialize the database schema
initialize_schema() {
  echo "Initializing the Guacamole database schema..."
  # Wait until the database is ready by checking the connection
  until docker exec $(docker-compose ps -q database) pg_isready -U postgres; do
    sleep 2
  done
  echo "Creating role 'root' in PostgreSQL..."
  docker exec -i $(docker-compose ps -q database) psql -U postgres -d guacamole -c "CREATE ROLE root WITH LOGIN PASSWORD 'root';" || true
  
  echo "Granting privileges to 'root' user on database 'guacamole'..."
  docker exec -i $(docker-compose ps -q database) psql -U postgres -d guacamole -c "GRANT ALL PRIVILEGES ON DATABASE guacamole TO root;" || true
  # Run the schema initialization command for Guacamole
  echo "Running database initialization..."
  docker exec -i $(docker-compose ps -q guacamole-server) /opt/guacamole/bin/initdb.sh --postgresql --users=root --password=root --databases=guacamole
}
# Main script execution
start_containers
initialize_schema
echo "Apache Guacamole setup is complete. Access it at http://localhost:8080"
echo "Default username: guacadmin, Default password: guacadmin"
echo "Please change the default password after logging in."
