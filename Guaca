#!/bin/bash
# Function to handle cleanup and rollback on error
cleanup() {
  echo "An error occurred. Cleaning up..."
  # Stop and remove the Docker containers
  docker-compose down -v
  # Remove any created database files
  rm -rf ./db
  exit 1
}
# Trap any error and call the cleanup function
trap cleanup ERR
# Create the docker-compose.yml file
cat <<EOF > docker-compose.yml
version: '3'
services:
  guacd:
    restart: always
    image: guacamole/guacd
  guacamole-server:
    restart: always
    image: guacamole/guacamole
    depends_on:
      - database
    ports:
      - "8080:8080"
    environment:
      - GUACD_HOSTNAME=guacd
      - POSTGRESQL_HOSTNAME=database            # Database hostname
      - POSTGRESQL_DATABASE=guacamole            # Database name
      - POSTGRESQL_USER=guac                    # User set to "guac"
      - POSTGRESQL_PASSWORD=guacpassword         # Password for the user
  database:
    restart: always
    image: postgres:15.5-alpine
    environment:
      - POSTGRES_USER=postgres                  # Use PostgreSQL superuser
      - POSTGRES_DB=guacamole                   # Create the database "guacamole"
      - POSTGRES_PASSWORD=mysecretpassword      # Set the PostgreSQL superuser password
    volumes:
      - ./db:/var/lib/postgresql/data:rw
EOF
# Function to start Docker containers
start_containers() {
  echo "Starting Docker containers..."
  docker-compose up -d
  echo "Waiting for PostgreSQL to initialize..."
  sleep 15 # Wait for PostgreSQL to fully initialize
}
# Function to initialize the Guacamole database schema
initialize_schema() {
  echo "Initializing the Guacamole database schema..."
  
  # Wait until the PostgreSQL database is ready by checking the connection
  until docker exec $(docker-compose ps -q database) pg_isready -U postgres; do
    echo "Waiting for PostgreSQL to become ready..."
    sleep 2
  done
  
  echo "Creating Guacamole user..."
  
  # Create the user (if it already exists, ignore the error)
  docker exec -i $(docker-compose ps -q database) psql -U postgres -d guacamole -c "CREATE ROLE guac LOGIN PASSWORD 'guacpassword';" || echo "User 'guac' already exists."
  echo "Granting privileges to Guacamole user..."
  
  # Grant privileges to the user
  docker exec -i $(docker-compose ps -q database) psql -U postgres -d guacamole -c "GRANT ALL PRIVILEGES ON DATABASE guacamole TO guac;" || echo "Privileges already granted."
  echo "Running the Guacamole database initialization script..."
  
  # Run the schema initialization for Guacamole
  docker exec -i $(docker-compose ps -q guacamole-server) /opt/guacamole/bin/initdb.sh \
    --postgresql \
    --users=guac \
    --password=guacpassword \
    --databases=guacamole
  echo "Database initialization complete."
}
# Main script execution
start_containers
initialize_schema
echo "Apache Guacamole setup is complete. Access it at http://localhost:8080"
echo "Default username: guacadmin, Default password: guacadmin"
echo "Please change the default password after logging in."
