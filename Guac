#!/bin/bash
# Define variables
GUACAMOLE_DATABASE=guacamole
GUACAMOLE_USER=guac
GUACAMOLE_PASSWORD=your-password-here
GUACAMOLE_PORT=8080
WORK_DIR=$(pwd)
# Function to create the docker-compose.yml file
create_docker_compose() {
  cat <<EOF > docker-compose.yml
version: '3'
services:
  guacd:
    restart: always
    image: guacamole/guacd
  guacamole-server:
    restart: always
    image: guacamole/guacamole
    depends_on:
      - database
    ports:
      - "${GUACAMOLE_PORT}:8080"
    environment:
      - GUACD_HOSTNAME=guacd
      - POSTGRESQL_HOSTNAME=database
      - POSTGRESQL_DATABASE=${GUACAMOLE_DATABASE}
      - POSTGRESQL_USER=${GUACAMOLE_USER}
      - POSTGRESQL_PASSWORD=${GUACAMOLE_PASSWORD}
  database:
    restart: always
    image: postgres:15.5-alpine
    environment:
      - POSTGRES_USER=${GUACAMOLE_USER}
      - POSTGRES_DB=${GUACAMOLE_DATABASE}
      - POSTGRES_PASSWORD=${GUACAMOLE_PASSWORD}
    volumes:
      - ${WORK_DIR}/db:/var/lib/postgresql/data:rw
EOF
}
# Function to start Docker containers
start_containers() {
  echo "Starting Docker containers..."
  docker-compose up -d
  echo "Waiting for PostgreSQL to initialize..."
  sleep 10 # Wait for the database to initialize
}
# Function to initialize the database schema
initialize_schema() {
  echo "Initializing the Guacamole database schema..."
  # Wait until the database is ready by checking connection
  until docker exec -it $(docker-compose ps -q database) pg_isready -U $GUACAMOLE_USER; do
    sleep 2
  done
  # Run the schema initialization
  docker exec -i $(docker-compose ps -q guacamole-server) /opt/guacamole/bin/initdb.sh --postgresql -u $GUACAMOLE_USER -p $GUACAMOLE_PASSWORD ${GUACAMOLE_DATABASE}
}
# Main script execution
create_docker_compose
start_containers
initialize_schema
echo "Apache Guacamole setup is complete. Access it at http://localhost:${GUACAMOLE_PORT}"
echo "Default username: guacadmin, Default password: guacadmin"
echo "Please change the default password after logging in."
